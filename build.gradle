buildscript {
    ext {
        shadowVersion = '5.1.0'
        testSetsVersion = '2.2.1'
        lombokVersion = '1.18.10'
        reactorVersion = '3.3.5.RELEASE'
        websocketVersion = '1.4.1'
    }
}

plugins {
    id 'java-library'
    id 'groovy'
    id 'checkstyle'
    id 'maven-publish'

    id 'com.github.johnrengelman.shadow' version "${shadowVersion}"
    id 'org.unbroken-dome.test-sets' version "${testSetsVersion}"
}

repositories {
    mavenLocal()
    jcenter()
}

sourceCompatibility = 1.8

group = 'com.finplant.mt_remote'
version = '1.0.1'

dependencies {
    api "io.projectreactor:reactor-core:${reactorVersion}"
    api "io.projectreactor:reactor-tools:${reactorVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    implementation "org.java-websocket:Java-WebSocket:${websocketVersion}"

    testImplementation 'org.codehaus.groovy:groovy-all:2.5.7'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation "io.projectreactor:reactor-test:${reactorVersion}"
    testImplementation 'org.assertj:assertj-core:3.11.1'

    checkstyle('com.github.sevntu-checkstyle:sevntu-checks:1.32.0')
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Java client for MT Remote',
                   'Implementation-Version': archiveVersion.getOrNull(),
                   'Main-Class': project.group + '.Main'
    }
}

shadowJar {
    archiveBaseName.set('mt-remote')
    archiveClassifier.set(null)
}

checkstyle {
    toolVersion = '8.14'
    configFile = new File("checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = false
}

testSets {
    integrationTest {
        dirName = 'test-integration'
    }
}

integrationTest {
    exclude '**/manual/*Tests.groovy'
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifact tasks.sourceJar
            groupId = 'com.finplant.mt-remote'
            artifactId = 'mt-remote'
        }
    }
}